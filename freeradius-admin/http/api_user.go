/*
 * freeRADIUS Admin - OpenAPI 3.0
 *
 * get http api for admin freeradius
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package http

import (
	"net/http"
	"encoding/json"
	"log"
	"os"
	"freeradius-admin/db"
)

var domain = os.Getenv("HOST")

func AddUser(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
	var user User
	err := json.NewDecoder(r.Body).Decode(&user)
	if err != nil {
		http.Error(w, err.Error(), http.StatusBadRequest)
		log.Print("AddUser failed deserialize!", err)
		return
	}
	uc := &db.UserCheck{
		Username: user.Username, 
		Attribute: "Cleartext-Password", 
		Operator: ":=", 
		Value: user.Password,
	}
	userInfo := uc.SaveToDB()
	uc.SaveGroup(domain)
	err = json.NewEncoder(w).Encode(userInfo)
	if err != nil {
		http.Error(w, err.Error(), http.StatusBadRequest)
		log.Print("AddUser failed deserialize!", err)
		return
	}
}

func GetAllUser(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
	users := db.GetAllUserByGroup(domain)
	err := json.NewEncoder(w).Encode(users)
	if err != nil {
		http.Error(w, err.Error(), http.StatusBadRequest)
		log.Print("AddUser failed deserialize!", err)
		return
	} 
}
