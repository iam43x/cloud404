/*
 * freeRADIUS Admin - OpenAPI 3.0
 *
 * get http api for admin freeradius
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package http

import (
	"net/http"
	"strings"
	"github.com/gorilla/mux"
	"freeradius-admin/secure"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
	Secured bool
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler 
		handler = Logger(route.HandlerFunc, route.Name)
		if route.Secured {
			//add auth handler
			handler = secure.AuthHandler(handler)
		}
		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

var routes = Routes{

	Route{
		Name: "AddUser",
		Method: strings.ToUpper("Post"),
		Pattern: "/addUser",
		HandlerFunc: AddUser,
		Secured: true,
	},

	Route{
		Name: "GetAllUser",
		Method: strings.ToUpper("Post"),
		Pattern: "/getAllUsers",
		HandlerFunc: GetAllUser,
		Secured: true,
	},

	Route{
		Name: "GetToken",
		Method: strings.ToUpper("Post"),
		Pattern: "/getToken",
		HandlerFunc: secure.GetToken,
		Secured: false,
	},

	Route{
		Name: "GetContext",
		Method: strings.ToUpper("Post"),
		Pattern: "/getContext",
		HandlerFunc: secure.GetContext,
		Secured: true,
	},
}
